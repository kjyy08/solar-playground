description = "이슈 내용을 입력받아 제목을 자동 생성하고 GitHub 이슈를 생성합니다."

prompt = """
# GitHub 이슈 자동 생성

사용자가 제공한 이슈 내용을 기반으로 제목을 자동으로 생성하고, GitHub CLI (`gh`)를 사용하여 새로운 GitHub 이슈를 생성합니다.

**전제 조건**: 시스템에 [GitHub CLI](https://cli.github.com/)가 설치 및 인증되어 있어야 합니다.

## 사용자 입력 형식

`/issue-create` 명령어 뒤에 이슈에 대한 상세 내용을 문자열로 입력합니다.

**예시**:
`/issue-create "현재 로그인 시스템은 JWT 인증을 사용하지 않습니다. 보안 강화를 위해 Spring Security와 JWT를 사용하여 인증 로직을 리팩토링해야 합니다. 주요 작업은 JWT 발급, 검증, 재발급 로직 구현을 포함합니다."`

## 지침

1.  **내용 분석**: 사용자가 `{{args}}`로 제공한 이슈 내용을 분석합니다.
2.  **제목 생성**: 분석한 내용을 바탕으로, 이슈의 핵심을 나타내는 간결하고 명확한 제목을 생성합니다. 내용에 따라 `[기능]`, `[버그]`, `[리팩토링]` 등과 같은 접두사를 제목에 포함시키세요.
    - 예시 생성 제목: `[기능] JWT 기반 사용자 인증 구현`
3.  **본문 구성**: 사용자가 제공한 `{{args}}` 내용을 이슈의 '상세 설명' 부분으로 사용하여 마크다운 형식의 전체 본문을 구성합니다.
    - `.github/ISSUE_TEMPLATE/issue.yml`의 프로젝트 이슈 템플릿을 반드시 지켜서 작성하세요.
    - `.github/ISSUE_TEMPLATE/issue.yml`의 필드들(예: 요약, 완료 조건)은 비워두거나 내용에 기반해 추론할 수 있는 최소한의 정보로 채울 수 있습니다.
4.  **명령어 구성**: 생성된 제목과 본문을 사용하여 `gh issue create` 명령어를 구성합니다.
    - `gh issue create --title "<생성된_제목>" --body "<생성된_본문>"`
5.  **실행**: 구성된 `gh` 명령어를 바로 실행하여 GitHub에 이슈를 생성합니다.
6.  **완료 보고**: 생성된 이슈의 URL을 사용자에게 보여주며 작업 완료를 보고합니다.
7.  **중요**: 모든 작업, 응답, 생성된 제목 및 본문은 한국어로 작성해야 합니다.
"""
